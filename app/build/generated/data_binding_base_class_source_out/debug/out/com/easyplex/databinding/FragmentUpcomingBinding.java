// Generated by data binding compiler. Do not edit!
package com.easyplex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.recyclerview.widget.RecyclerView;
import com.easyplex.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.Deprecated;
import java.lang.Object;
import me.relex.circleindicator.CircleIndicator2;

public abstract class FragmentUpcomingBinding extends ViewDataBinding {
  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final CircleIndicator2 indicator;

  @NonNull
  public final ImageView logoImageTop;

  @NonNull
  public final LinearLayout noResults;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewUpcoming;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final Guideline tubiTvControllerGuidelineBottom;

  @NonNull
  public final Guideline tubiTvControllerGuidelineLeft;

  @NonNull
  public final Guideline tubiTvControllerGuidelineRight;

  @NonNull
  public final Guideline tubiTvControllerGuidelineSeekLeft;

  @NonNull
  public final Guideline tubiTvControllerGuidelineSeekRight;

  @NonNull
  public final Guideline tubiTvControllerGuidelineTop;

  protected FragmentUpcomingBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppBarLayout appBarLayout, ConstraintLayout constraintLayout, CircleIndicator2 indicator,
      ImageView logoImageTop, LinearLayout noResults, ProgressBar progressBar,
      RecyclerView recyclerViewUpcoming, Toolbar toolbar, Guideline tubiTvControllerGuidelineBottom,
      Guideline tubiTvControllerGuidelineLeft, Guideline tubiTvControllerGuidelineRight,
      Guideline tubiTvControllerGuidelineSeekLeft, Guideline tubiTvControllerGuidelineSeekRight,
      Guideline tubiTvControllerGuidelineTop) {
    super(_bindingComponent, _root, _localFieldCount);
    this.appBarLayout = appBarLayout;
    this.constraintLayout = constraintLayout;
    this.indicator = indicator;
    this.logoImageTop = logoImageTop;
    this.noResults = noResults;
    this.progressBar = progressBar;
    this.recyclerViewUpcoming = recyclerViewUpcoming;
    this.toolbar = toolbar;
    this.tubiTvControllerGuidelineBottom = tubiTvControllerGuidelineBottom;
    this.tubiTvControllerGuidelineLeft = tubiTvControllerGuidelineLeft;
    this.tubiTvControllerGuidelineRight = tubiTvControllerGuidelineRight;
    this.tubiTvControllerGuidelineSeekLeft = tubiTvControllerGuidelineSeekLeft;
    this.tubiTvControllerGuidelineSeekRight = tubiTvControllerGuidelineSeekRight;
    this.tubiTvControllerGuidelineTop = tubiTvControllerGuidelineTop;
  }

  @NonNull
  public static FragmentUpcomingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_upcoming, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentUpcomingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentUpcomingBinding>inflateInternal(inflater, R.layout.fragment_upcoming, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentUpcomingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_upcoming, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentUpcomingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentUpcomingBinding>inflateInternal(inflater, R.layout.fragment_upcoming, null, false, component);
  }

  public static FragmentUpcomingBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentUpcomingBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentUpcomingBinding)bind(component, view, R.layout.fragment_upcoming);
  }
}
