// Generated by data binding compiler. Do not edit!
package com.easyplex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSeekBar;
import androidx.core.widget.ContentLoadingProgressBar;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.easyplex.R;
import com.easyplex.ui.downloadmanager.ui.adddownload.AddDownloadViewModel;
import com.easyplex.ui.downloadmanager.ui.customview.ExpansionHeader;
import com.easyplex.ui.downloadmanager.ui.customview.FixHintTextInputEditText;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;
import net.cachapa.expandablelayout.ExpandableLayout;

public abstract class DialogAddDownloadBinding extends ViewDataBinding {
  @NonNull
  public final ImageButton addUserAgent;

  @NonNull
  public final ExpandableLayout advancedLayout;

  @NonNull
  public final LinearLayout afterFetchLayout;

  @NonNull
  public final FixHintTextInputEditText checksum;

  @NonNull
  public final ImageButton checksumClipboardButton;

  @NonNull
  public final TextView checksumTitle;

  @NonNull
  public final TextInputEditText description;

  @NonNull
  public final ExpansionHeader expansionHeader;

  @NonNull
  public final ContentLoadingProgressBar fetchProgress;

  @NonNull
  public final ImageButton folderChooserButton;

  @NonNull
  public final TextView freeSpace;

  @NonNull
  public final TextInputLayout layoutChecksum;

  @NonNull
  public final TextInputLayout layoutDescription;

  @NonNull
  public final TextInputLayout layoutLink;

  @NonNull
  public final TextInputLayout layoutName;

  @NonNull
  public final TextInputLayout layoutReferer;

  @NonNull
  public final TextInputLayout layoutSavePath;

  @NonNull
  public final TextInputEditText link;

  @NonNull
  public final TextInputEditText name;

  @NonNull
  public final RelativeLayout partialSupportWarning;

  @NonNull
  public final ImageView partialSupportWarningImg;

  @NonNull
  public final TextView piecesNumber;

  @NonNull
  public final AppCompatSeekBar piecesNumberSelect;

  @NonNull
  public final TextInputEditText piecesNumberValue;

  @NonNull
  public final FixHintTextInputEditText referer;

  @NonNull
  public final ImageButton refererClipboardButton;

  @NonNull
  public final TextView refererTitle;

  @NonNull
  public final CheckBox replaceFile;

  @NonNull
  public final CheckBox retry;

  @NonNull
  public final TextInputEditText savePath;

  @NonNull
  public final TextView size;

  @NonNull
  public final CheckBox unmeteredConnectionsOnly;

  @NonNull
  public final ImageButton urlClipboardButton;

  @NonNull
  public final Spinner userAgent;

  @NonNull
  public final TextView userAgentTitle;

  @Bindable
  protected AddDownloadViewModel mViewModel;

  protected DialogAddDownloadBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageButton addUserAgent, ExpandableLayout advancedLayout, LinearLayout afterFetchLayout,
      FixHintTextInputEditText checksum, ImageButton checksumClipboardButton,
      TextView checksumTitle, TextInputEditText description, ExpansionHeader expansionHeader,
      ContentLoadingProgressBar fetchProgress, ImageButton folderChooserButton, TextView freeSpace,
      TextInputLayout layoutChecksum, TextInputLayout layoutDescription, TextInputLayout layoutLink,
      TextInputLayout layoutName, TextInputLayout layoutReferer, TextInputLayout layoutSavePath,
      TextInputEditText link, TextInputEditText name, RelativeLayout partialSupportWarning,
      ImageView partialSupportWarningImg, TextView piecesNumber,
      AppCompatSeekBar piecesNumberSelect, TextInputEditText piecesNumberValue,
      FixHintTextInputEditText referer, ImageButton refererClipboardButton, TextView refererTitle,
      CheckBox replaceFile, CheckBox retry, TextInputEditText savePath, TextView size,
      CheckBox unmeteredConnectionsOnly, ImageButton urlClipboardButton, Spinner userAgent,
      TextView userAgentTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addUserAgent = addUserAgent;
    this.advancedLayout = advancedLayout;
    this.afterFetchLayout = afterFetchLayout;
    this.checksum = checksum;
    this.checksumClipboardButton = checksumClipboardButton;
    this.checksumTitle = checksumTitle;
    this.description = description;
    this.expansionHeader = expansionHeader;
    this.fetchProgress = fetchProgress;
    this.folderChooserButton = folderChooserButton;
    this.freeSpace = freeSpace;
    this.layoutChecksum = layoutChecksum;
    this.layoutDescription = layoutDescription;
    this.layoutLink = layoutLink;
    this.layoutName = layoutName;
    this.layoutReferer = layoutReferer;
    this.layoutSavePath = layoutSavePath;
    this.link = link;
    this.name = name;
    this.partialSupportWarning = partialSupportWarning;
    this.partialSupportWarningImg = partialSupportWarningImg;
    this.piecesNumber = piecesNumber;
    this.piecesNumberSelect = piecesNumberSelect;
    this.piecesNumberValue = piecesNumberValue;
    this.referer = referer;
    this.refererClipboardButton = refererClipboardButton;
    this.refererTitle = refererTitle;
    this.replaceFile = replaceFile;
    this.retry = retry;
    this.savePath = savePath;
    this.size = size;
    this.unmeteredConnectionsOnly = unmeteredConnectionsOnly;
    this.urlClipboardButton = urlClipboardButton;
    this.userAgent = userAgent;
    this.userAgentTitle = userAgentTitle;
  }

  public abstract void setViewModel(@Nullable AddDownloadViewModel viewModel);

  @Nullable
  public AddDownloadViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static DialogAddDownloadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_add_download, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static DialogAddDownloadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<DialogAddDownloadBinding>inflateInternal(inflater, R.layout.dialog_add_download, root, attachToRoot, component);
  }

  @NonNull
  public static DialogAddDownloadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.dialog_add_download, null, false, component)
   */
  @NonNull
  @Deprecated
  public static DialogAddDownloadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<DialogAddDownloadBinding>inflateInternal(inflater, R.layout.dialog_add_download, null, false, component);
  }

  public static DialogAddDownloadBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static DialogAddDownloadBinding bind(@NonNull View view, @Nullable Object component) {
    return (DialogAddDownloadBinding)bind(component, view, R.layout.dialog_add_download);
  }
}
